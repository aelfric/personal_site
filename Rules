#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/sitemap/' do
    filter :haml
end

route '/sitemap/' do
    item.identifier.chop + '.xml'
end

compile '/robots/' do
end

route '/robots/' do
  item.identifier.chop + '.txt'
end

compile '/stylesheet/' do
  filter :rainpress
  # don’t filter or layout
end

compile '/assets/stylesheets/*/' do
  filter :rainpress
  # don’t filter or layout
end

compile '/assets/js/*/' do
end
compile 'voluspa/*' do
end

compile '/assets/images/Props/*/', rep: :thumbnail do
  filter :thumbnailize, width: 200
end

compile '/assets/images/Props/*/' do
  filter :optimize
end

compile '/assets/images/*.png' do
  filter :optimize
end

route '/assets/images/Props/*/', rep: :thumbnail do
  item.identifier.chop + '-thumbnail.jpg'
end

compile '/assets/*' do
  #nothing
end

route '/stylesheet/' do
  '/style.css'
end

route '/assets/stylesheets/*/' do
    item.identifier.chop + ".css"
end

route '/assets/js/*/' do
    item.identifier.chop + ".min.js"
end

compile '/**/*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :erb
    if (!item[:tags].nil? && (item[:tags].include? "stuff_i_wrote"))
      layout '/writing/'
    end
    layout '/default/'
    filter :relativize_paths, :type=> :html
  end
end

route '/voluspa/*/' do
	item.identifier.chop + '.' + item[:extension]
end

route '/**/*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  elsif item[:extension] == 'js'
	  item.identifier.chop + '.js'
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end


layout '/**/*', :erb
